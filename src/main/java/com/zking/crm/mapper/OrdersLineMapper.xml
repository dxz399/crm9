<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.crm.mapper.OrdersLineMapper" >
  <resultMap id="BaseResultMap" type="com.zking.crm.model.OrdersLine" >
    <constructor >
      <idArg column="odd_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="odd_order_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="odd_prod_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="odd_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="odd_unit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="odd_price" jdbcType="REAL" javaType="java.lang.Float" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    odd_id, odd_order_id, odd_prod_id, odd_count, odd_unit, odd_price
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders_line
    where odd_id = #{oddId,jdbcType=INTEGER}
  </select>
    <select id="list" resultMap="BaseResultMap"
            parameterType="com.zking.crm.model.OrdersLine">
      select * from orders_line where odd_order_id = #{oddOrderId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders_line
    where odd_id = #{oddId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zking.crm.model.OrdersLine" >
    insert into orders_line (odd_id, odd_order_id, odd_prod_id, 
      odd_count, odd_unit, odd_price
      )
    values (#{oddId,jdbcType=INTEGER}, #{oddOrderId,jdbcType=INTEGER}, #{oddProdId,jdbcType=INTEGER}, 
      #{oddCount,jdbcType=INTEGER}, #{oddUnit,jdbcType=VARCHAR}, #{oddPrice,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zking.crm.model.OrdersLine" >
    insert into orders_line
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oddId != null" >
        odd_id,
      </if>
      <if test="oddOrderId != null" >
        odd_order_id,
      </if>
      <if test="oddProdId != null" >
        odd_prod_id,
      </if>
      <if test="oddCount != null" >
        odd_count,
      </if>
      <if test="oddUnit != null" >
        odd_unit,
      </if>
      <if test="oddPrice != null" >
        odd_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oddId != null" >
        #{oddId,jdbcType=INTEGER},
      </if>
      <if test="oddOrderId != null" >
        #{oddOrderId,jdbcType=INTEGER},
      </if>
      <if test="oddProdId != null" >
        #{oddProdId,jdbcType=INTEGER},
      </if>
      <if test="oddCount != null" >
        #{oddCount,jdbcType=INTEGER},
      </if>
      <if test="oddUnit != null" >
        #{oddUnit,jdbcType=VARCHAR},
      </if>
      <if test="oddPrice != null" >
        #{oddPrice,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.crm.model.OrdersLine" >
    update orders_line
    <set >
      <if test="oddOrderId != null" >
        odd_order_id = #{oddOrderId,jdbcType=INTEGER},
      </if>
      <if test="oddProdId != null" >
        odd_prod_id = #{oddProdId,jdbcType=INTEGER},
      </if>
      <if test="oddCount != null" >
        odd_count = #{oddCount,jdbcType=INTEGER},
      </if>
      <if test="oddUnit != null" >
        odd_unit = #{oddUnit,jdbcType=VARCHAR},
      </if>
      <if test="oddPrice != null" >
        odd_price = #{oddPrice,jdbcType=REAL},
      </if>
    </set>
    where odd_id = #{oddId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.crm.model.OrdersLine" >
    update orders_line
    set odd_order_id = #{oddOrderId,jdbcType=INTEGER},
      odd_prod_id = #{oddProdId,jdbcType=INTEGER},
      odd_count = #{oddCount,jdbcType=INTEGER},
      odd_unit = #{oddUnit,jdbcType=VARCHAR},
      odd_price = #{oddPrice,jdbcType=REAL}
    where odd_id = #{oddId,jdbcType=INTEGER}
  </update>
</mapper>